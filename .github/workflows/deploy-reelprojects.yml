name: Deploy ReelProjects to AWS Amplify

on:
  push:
    branches: [ main ]
    paths:
      - 'ReelProjects/**'
      - 'packages/**'
      - '.github/workflows/deploy-reelprojects.yml'
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  APP_NAME: 'ReelProjects'
  SUBDOMAIN: 'reelprojects'

jobs:
  deploy-reelprojects:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install workspace dependencies
      run: |
        npm ci
        npm run build:packages
    
    - name: Install ReelProjects dependencies
      working-directory: ./ReelProjects
      run: npm ci
    
    - name: Build ReelProjects
      working-directory: ./ReelProjects
      run: npm run build
      env:
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        VITE_AWS_ACCESS_KEY_ID: ${{ secrets.VITE_AWS_ACCESS_KEY_ID }}
        VITE_AWS_SECRET_ACCESS_KEY: ${{ secrets.VITE_AWS_SECRET_ACCESS_KEY }}
        VITE_AWS_REGION: ${{ secrets.AWS_REGION }}
        VITE_AWS_BUCKET: ${{ secrets.VITE_AWS_BUCKET }}
        VITE_HOME_URL: https://www.reelapps.co.za
        VITE_APP_URL: https://reelprojects.reelapps.co.za
        VITE_SSO_ENABLED: true
        VITE_MAIN_DOMAIN: reelapps.co.za
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Deploy to AWS Amplify
      run: |
        # Create or update Amplify app
        aws amplify create-app \
          --name "reelprojects-reelapps" \
          --description "ReelProjects - Project showcase platform" \
          --platform WEB \
          --custom-rules '[
            {
              "source": "https://reelprojects.reelapps.co.za",
              "target": "https://reelprojects.reelapps.co.za",
              "status": "200",
              "condition": null
            },
            {
              "source": "/<*>",
              "target": "/index.html",
              "status": "200",
              "condition": null
            }
          ]' \
          --environment-variables '{
            "VITE_SUPABASE_URL": "${{ secrets.VITE_SUPABASE_URL }}",
            "VITE_SUPABASE_ANON_KEY": "${{ secrets.VITE_SUPABASE_ANON_KEY }}",
            "VITE_AWS_ACCESS_KEY_ID": "${{ secrets.VITE_AWS_ACCESS_KEY_ID }}",
            "VITE_AWS_SECRET_ACCESS_KEY": "${{ secrets.VITE_AWS_SECRET_ACCESS_KEY }}",
            "VITE_AWS_REGION": "${{ secrets.AWS_REGION }}",
            "VITE_AWS_BUCKET": "${{ secrets.VITE_AWS_BUCKET }}",
            "VITE_HOME_URL": "https://www.reelapps.co.za",
            "VITE_APP_URL": "https://reelprojects.reelapps.co.za",
            "VITE_SSO_ENABLED": "true",
            "VITE_MAIN_DOMAIN": "reelapps.co.za"
          }' || true
        
        # Get app ID
        APP_ID=$(aws amplify list-apps --query "apps[?name=='reelprojects-reelapps'].appId" --output text)
        echo "APP_ID=$APP_ID" >> $GITHUB_ENV
        
        # Create branch if it doesn't exist
        aws amplify create-branch \
          --app-id $APP_ID \
          --branch-name main \
          --description "Main production branch" || true
        
        # Update custom domain
        aws amplify create-domain-association \
          --app-id $APP_ID \
          --domain-name reelapps.co.za \
          --sub-domain-settings '[
            {
              "prefix": "reelprojects",
              "branchName": "main"
            }
          ]' || true
    
    - name: Upload build to Amplify
      run: |
        # Create deployment
        DEPLOYMENT_ID=$(aws amplify start-deployment \
          --app-id $APP_ID \
          --branch-name main \
          --source-url "https://github.com/${{ github.repository }}" \
          --query 'jobSummary.jobId' --output text)
        
        echo "Deployment started with ID: $DEPLOYMENT_ID"
        
        # Wait for deployment to complete
        aws amplify wait job-completed \
          --app-id $APP_ID \
          --branch-name main \
          --job-id $DEPLOYMENT_ID
    
    - name: Verify deployment
      run: |
        echo "✅ ReelProjects deployed successfully to https://reelprojects.reelapps.co.za"
        curl -f https://reelprojects.reelapps.co.za || echo "❌ Deployment verification failed" 